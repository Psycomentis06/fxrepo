version: "3.8"
services:
  fx-storage:
    build:
      dockerfile: "dockerfile"
      context: "storage"
    environment:
      # S3 config
      # local dev keys
      - S3_ACCESS_KEY=5MfxOFuj0zKwlLnd5sJ8
      - S3_SECRET_KEY=BUMmJxjMn2mFMw8YkZkK9lS2Zj73Vqd3vD3UQAkT
      - S3_ENDPOINT=fx-minio-container:9000
      - S3_SSL=false
      # Username and password used to authenticate every request
      - USERNAME=user
      - PASSWORD=user
      # Gin mode
      - GIN_MODE=debug
    ports:
      - "9055:8080"
    networks:
      - kafka-network
      - minio-network
      - preprocessing-storage-network
    volumes:
      - "./storage:/usr/src/app"
  fx-minio:
    image: minio/minio
    container_name: fx-minio-container
    command: server --console-address ":9001" /data
    ports:
      -  "9000:9000"
      -  "9001:9001"
    volumes:
      - minio-data-volume:/data
    networks:
      - minio-network
  fx-zookeeper:
    image: ubuntu/zookeeper
    container_name: fx-zk-container
    networks:
      - zookeeper-network
    ports:
      - ":2181"
  fx-apache_kafka:
    image: ubuntu/kafka
    networks:
      - zookeeper-network
      - kafka-network
    environment:
      - ZOOKEEPER_HOST=fx-zk-container
      - ZOOKEEPER_PORT=2181
    ports:
      - ":9092"
    depends_on:
      - fx-zookeeper
  fx-redis:
    # For dev we are using only one redis instance
    image: redis:7-alpine
    ports:
      -  "6379:6379"
    networks:
      redis-network:
  fx-preprocessing:
    build:
      context: "./preprocessing"
      dockerfile: "Dockerfile"
    environment:
      - REDIS_HOST=fx-redis
      - REDIS_PORT=6379
    volumes:
      - "./preprocessing:/usr/src/app"
    ports:
      - "9056:5000"
    networks:
      kafka-network:
      redis-network:
      preprocessing-storage-network:
  fx-main-service:
    build:
      context: "./fx-repo-main"
      dockerfile: "Dockerfile"
    environment:
      - MAIN_DB_HOST=fx-postgresql:5432
      - MAIN_DB_USERNAME=postgres
      - MAIN_DB_PASSWORD=postgres
      - MAIN_DB_CONNECTION_STRING=jdbc:postgresql://fx-postgresql:5432/fx_repo_main
    volumes:
      - "./fx-repo-main:/usr/src/app"
    ports:
      - "9057:8000"
    networks:
      - main-service-network
      - postgresql-network
      - redis-network
      - kafka-network
      - keycloak-network
  fx-postgresql:
    image: postgres:15-bookworm
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fx_repo_main
    ports:
      - "5432:5432"
    networks:
      - postgresql-network
      - keycloak-network
#  fx-keycloak:
#    build:
#      context: "keycloak"
#      dockerfile: "Dockerfile"
#    environment:
#      - KC_DB=postgres
#      - KC_DB_URL=fx-postgresql:5432
#      - KC_DB_USERNAME=postgres
#      - KC_DB_PASSWORD=postgres
#      - KC_HOSTNAME=localhost
#      - KC_HEALTH_ENABLED=true
#      - KC_METRICS_ENABLED=true
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#    ports:
#      - "8443:8443"
#    networks:
#      keycloak-network:




volumes:
  minio-data-volume:
networks:
  zookeeper-network:
  kafka-network:
  minio-network:
  redis-network:
  preprocessing-storage-network:
  postgresql-network:
  main-service-network:
  keycloak-network: